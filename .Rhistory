bw_sim<-as.data.frame(unlist(normalize))
})
bw_sim<-do.call(cbind.data.frame, bw_sim)
colnames(bw_sim)[1:nsims]<-names<-paste0("BW",1:nsims,"")
###survival
#simulate survival using a binomial distribution with modified duration
survival_sim <- matrix(data=NA,nrow=nrow(effects),ncol=nsims)
colnames(survival_sim)[1:nsims]<-paste0("Sur",1:nsims,"")
names(effects)
for(i in 1:nrow(effects)){
survival_sim[i,]<-rbinom(nsims, effects[i,17], effects[i,20]) #trials is number of observations for each experiment, prob is adjusted prob of survival for 96 hours
survival_sim[i,]<-round(survival_sim[i,]/effects[i,17],3) #divide the number surviving by total trials to find the proportion that actually survived
}
survival_sim<-as.data.frame(survival_sim)
###exposure parameters
#simulate the exposure parameters from Purucker et al. 2021
exposure_sims <- matrix(data=NA,nrow=nsims,ncol=6)
colnames(exposure_sims) <- c("dt_mean","movement_rate_mean","bioavail_mean",
"dermal_sa_slope_mean","dermal_sa_exponent_mean",
"dermal_fraction_mean")
exposure_sims[,1]<-rnorm(nsims, mean=param[1,2], sd=param[2,2])
exposure_sims[,2]<-rpois(nsims, param[3,2])                     #recall this is a poisson distribution, so no SD
exposure_sims[,3]<-rnorm(nsims, mean=param[5,2], sd=param[6,2])
exposure_sims[,4]<-rnorm(nsims, mean=param[7,2], sd=param[8,2])
exposure_sims[,5]<-rnorm(nsims, mean=param[9,2], sd=param[10,2])
exposure_sims[,6]<-rnorm(nsims, mean=param[11,2], sd=param[12,2])
exposure_sims<-as.data.frame(exposure_sims)
###pyraclostrobin
#calculate dermal dosage
pmolweight<-387.8 #g/mol #comptox
plogKow<- 4.44 #comptox
kp_pyra =  10^(-2.72+(0.71*plogKow)-(0.0061*pmolweight))
hl<-4.91*24 #from comptox profile
#calculate soil concentrations; application rate will remain the same, the exponent value changes with exposure parameter simulations
soil_concs_degs<-as.data.frame(log(2)/hl*96/exposure_sims$movement_rate_mean) #use 96 as duration, as we adjusted all survivals for a 96h timeframe
soil_concs<-((effects$Application_Rate*10)/16000)*1000 #1cm depth #converts it into final units of ug/g (tissue conc/bw)#this comes from Weir
my_list<-list()
for (i in 1:nsims){
dsa<-exposure_sims[i,5]*bw_sim[,i]^exposure_sims[i,5]
dermal_dose<-(soil_concs^soil_concs_degs[i,] * kp_pyra * (dsa/exposure_sims[i,1]) * exposure_sims[i,6] * exposure_sims[i,3])/bw_sim[,i]
my_list[[i]]<-dermal_dose
}
my_list[9] #check the list outputs to be sure
derm<-as.data.frame(t(do.call(rbind.data.frame, my_list)))
colnames(derm)<-paste0("dermdose",1:nsims,"")
row.names(derm)<-NULL
fam<-as.data.frame(cbind(effects$Family, effects$Study))
names(fam)<-c('Family', 'Study')
mod_As<- merge(fam,mod, by  = "Family")
mod_As<-mod_As[order(mod_As$Study),]
View(mod_As)
mod_As$As_Modifyer
bw_sim
bw_sim^mod_As$Exponent
exp<-bw_sim^mod_As$Exponent
View(exp)
bw_sim[1,1]^0.730
bw_sim[1,2]^0.730
as<-mod_As$As_Modifyer*exp
View(as)
as<-as[c(1:23),]
#100% of surface area
derm_adj_r<-derm[c(1:23),]*as
derm_adj_r<-rbind(derm_adj_r, derm[c(24:29),])
View(derm_adj_r)
#Check ratio:
ratio_100<-derm_adj_r/derm[c(1:23),]
#100% of surface area
derm_adj_r<-derm[c(1:23),]*as
View(derm_adj_r)
derm_adj_r<-rbind(derm_adj_r, derm[c(24:29),])
#Check ratio:
ratio_100<-derm_adj_r/derm[c(1:23),]
#100% of surface area
derm_adj_r<-derm[c(1:23),]*as
#Check ratio:
ratio_100<-derm_adj_r/derm[c(1:23),]
BCF_100_m<-colMeans(ratio_100[1:22,])
print(mean(BCF_100_m))
View(ratio_100)
bw_sim$Study<-effects$Study
View(bw_sim)
View(effects)
###Body weights
#Simulate body weights (BWs)- we need 1000 simulations of the X different BWs
by_s<-split(effects, list(effects$Study,effects$Species,effects$Application_Rate), drop=T) #split by study, species, application rate use SE
by_s<-by_s[order(names(by_s))]
print(names(by_s[[1]]))
bw_sim<-replicate(nsims,
{normalize <- lapply(by_s, function(y) rnorm(nrow(y), mean=y[[12]], sd=y[[13]]))
bw_sim<-as.data.frame(unlist(normalize))
})
bw_sim<-do.call(cbind.data.frame, bw_sim)
colnames(bw_sim)[1:nsims]<-names<-paste0("BW",1:nsims,"")
exp<-bw_sim^mod_As$Exponent
as<-mod_As$As_Modifyer*exp
View(as)
as<-mod_As$As_Modifyer*exp
View(as)
colnames(as)[1:nsims]<-names<-paste0("As",1:nsims,"")
View(as)
View(as)
bw_sim_as<-bw_sim
###Body weights
#Simulate body weights (BWs)- we need 1000 simulations of the X different BWs
by_s<-split(effects, list(effects$Study,effects$Species,effects$Application_Rate), drop=T) #split by study, species, application rate use SE
by_s<-by_s[order(names(by_s))]
print(names(by_s[[1]]))
bw_sim<-replicate(nsims,
{normalize <- lapply(by_s, function(y) rnorm(nrow(y), mean=y[[12]], sd=y[[13]]))
bw_sim<-as.data.frame(unlist(normalize))
})
bw_sim<-do.call(cbind.data.frame, bw_sim)
colnames(bw_sim)[1:nsims]<-names<-paste0("BW",1:nsims,"")
View(bw_sim)
bw_sim_as<-bw_sim
bw_sim_as$Study<-effects$Study
exp<-bw_sim_as^mod_As$Exponent
exp<-bw_sim_as[c(1:1000),]^mod_As$Exponent
View(bw_sim_as)
bw_sim_as<-bw_sim
exp<-bw_sim_as^mod_As$Exponent
View(bw_sim_as)
View(mod_As)
View(exp)
as<-mod_As$As_Modifyer*exp
View(as)
colnames(as)[1:nsims]<-names<-paste0("As",1:nsims,"")
View(as)
#100% of surface area
derm_adj_r<-derm*as
View(derm_adj_r)
View(derm)
#Check ratio:
ratio_100<-derm_adj_r/derm
BCF_100_m<-colMeans(ratio_100[1:22,])
print(mean(BCF_100_m))
View(ratio_100)
###pyraclostrobin
#calculate dermal dosage
pmolweight<-387.8 #g/mol #comptox
plogKow<- 4.44 #comptox
kp_pyra =  10^(-2.72+(0.71*plogKow)-(0.0061*pmolweight))
hl<-4.91*24 #from comptox profile
#calculate soil concentrations; application rate will remain the same, the exponent value changes with exposure parameter simulations
soil_concs_degs<-as.data.frame(log(2)/hl*96/exposure_sims$movement_rate_mean) #use 96 as duration, as we adjusted all survivals for a 96h timeframe
soil_concs<-((effects$Application_Rate*10)/16000)*1000 #1cm depth #converts it into final units of ug/g (tissue conc/bw)#this comes from Weir
my_list<-list()
###pyraclostrobin
#calculate dermal dosage
pmolweight<-387.8 #g/mol #comptox
plogKow<- 4.44 #comptox
kp_pyra =  10^(-2.72+(0.71*plogKow)-(0.0061*pmolweight))
hl<-4.91*24 #from comptox profile
#calculate soil concentrations; application rate will remain the same, the exponent value changes with exposure parameter simulations
soil_concs_degs<-as.data.frame(log(2)/hl*96/exposure_sims$movement_rate_mean) #use 96 as duration, as we adjusted all survivals for a 96h timeframe
soil_concs<-((effects$Application_Rate*10)/16000)*1000 #1cm depth #converts it into final units of ug/g (tissue conc/bw)#this comes from Weir
my_list<-list()
for (i in 1:nsims){
dsa<-exposure_sims[i,5]*bw_sim[,i]^exposure_sims[i,5]
dermal_dose<-(soil_concs^soil_concs_degs[i,] * kp_pyra * (dsa/exposure_sims[i,1]) * exposure_sims[i,6] * exposure_sims[i,3])/bw_sim[,i]
my_list[[i]]<-dermal_dose
}
my_list[9] #check the list outputs to be sure
soil_concs
bw_sim
View(bw_sim)
dermal_dose
dsa
soil_concs
#calculate soil concentrations; application rate will remain the same, the exponent value changes with exposure parameter simulations
soil_concs_degs<-as.data.frame(log(2)/hl*96/exposure_sims$movement_rate_mean) #use 96 as duration, as we adjusted all survivals for a 96h timeframe
effects$Application_Rate
View(effects)
effects<-read.csv('data_in/Headline_updated.csv')
param<-read.csv('data_in/parameters.csv') #go back and take weighted mean; sum alive / sum assessed
nsims<-1000
#set.seed(6379)
#first modify so that the survival is adjusted for 96 hours across all studies
effects$half_life<-(effects$Duration_h*log(2))/log(1/effects$Survival) #need to modify survival by duration, using an exponential growth curve
effects$adj_sur_96<-round(1/(2^(96/effects$half_life)),3)
print(names(effects))
df_sig<-effects[,c(1,5,8,10,17)] #make sure this output matches
df_sig<-na.omit(df_sig)
df_sig$mort<-round(df_sig$N_Exp - (df_sig$Survival*df_sig$N_Exp),0)
df_sig$alive<-df_sig$N_Exp-df_sig$mort
head(df_sig)
#split data into list by study/species for cochran armitage trend test
by_s_stat<-split(df_sig, list(df_sig$Study, df_sig$Species), drop=T)
by_s_stat<-lapply(by_s_stat, function (x) x[c('Application_Rate','mort','alive')])
#change format to matrix to run CA trend test to test for trends in increasing significance
ch0=list()
for (i in seq_along(by_s_stat)) {
a=t(by_s_stat[[i]])
colnames(a)<-a[1,]
a<-a[c(3,2),] #need to have no mort first row, mort second
row.names(a)<-c(0,1)
a<-as.matrix(a)
ch0[[i]]<-a
}
#run CA test over matrix list; format needs to match format in ?Cochran-Armitage 'dose' ex
CA_increasing_trend<-lapply(ch0,function(x) CochranArmitageTest(x,'increasing'))
CA_increasing_trend
#10,5,1 fail to reject the null hypothesis for pyraclostrobin
#non fail to reject the null hypothesis for glyphosate
#for pryaclostrobin
#1 is cusaac 2015 acris blanchardi
#5 is cusaac 2017a anaxyrus cognatus
#10 is cusaac 2017a anaxyrus woodhousii
#low sample sizes for two (5,10), other two not much response from exposure, also lower application rates
#remove 4 studies for a total of 25 points including weighted control
effects_sub<-effects[(effects$Study =='Cusaac_2015' & effects$Species == 'Acris blanchardi'),]
effects<-effects[!(effects$Study == 'Cusaac_2017a' | effects$Study == 'Cusaac_2015'), ]
effects<-rbind(effects,effects_sub)
effects<-effects[order(effects$Study),]
#group by study, species, and application rate
effects<-effects %>%
group_by(Study) %>% #study
group_by(Species) %>% #species
group_by(Application_Rate)%>% #application rate
mutate(SE = SD/sqrt(length(effects))) #mutate to add standard error to account for variability between studies
effects<-as.data.frame(effects)
#effects<-na.omit(effects)
controls<-effects[effects$Application_Rate == 0, ]  #take out all controls
control<-effects[1,] # take out single row which will contain final control
#function for weighted mean
weight_mean<-function(data,vector,weight){
round(with(data, sum(vector*weight)/sum(weight)),2)
}
control$Survival<-weight_mean(controls,controls$Survival, controls$N_Exp) #survival
control$N_Exp<-sum(controls$N_Exp)#use sum of the N used in dose for final N_exp
effects<-effects[!effects$Application_Rate == 0, ] #remove application rate of 0
effects<-rbind(effects,control)
min(effects$M_Body_Weight_g)
min(effects$SD)
effects <-effects[order(effects$Study),]
effects[order(effects$Study),]
effects
mod<-read.csv('data_in/As_Modifier.csv')
#### Pyraclostrobin ----
#note to self; specific column numbers will change depending on dataset
effects<-read.csv('data_in/Headline_updated.csv')
param<-read.csv('data_in/parameters.csv') #go back and take weighted mean; sum alive / sum assessed
nsims<-1000
#first modify so that the survival is adjusted for 96 hours across all studies
effects$half_life<-(effects$Duration_h*log(2))/log(1/effects$Survival) #need to modify survival by duration, using an exponential growth curve
effects$adj_sur_96<-round(1/(2^(96/effects$half_life)),3)
print(names(effects))
df_sig<-effects[,c(1,5,8,10,17)] #make sure this output matches
df_sig<-na.omit(df_sig)
df_sig$mort<-round(df_sig$N_Exp - (df_sig$Survival*df_sig$N_Exp),0)
df_sig$alive<-df_sig$N_Exp-df_sig$mort
mod<-read.csv('data_in/As_Modifier.csv')
#### Pyraclostrobin ----
#note to self; specific column numbers will change depending on dataset
effects<-read.csv('data_in/Headline_updated.csv')
param<-read.csv('data_in/parameters.csv') #go back and take weighted mean; sum alive / sum assessed
nsims<-1000
#first modify so that the survival is adjusted for 96 hours across all studies
effects$half_life<-(effects$Duration_h*log(2))/log(1/effects$Survival) #need to modify survival by duration, using an exponential growth curve
effects$adj_sur_96<-round(1/(2^(96/effects$half_life)),3)
print(names(effects))
df_sig<-effects[,c(1,5,8,10,17)] #make sure this output matches
df_sig<-na.omit(df_sig)
df_sig$mort<-round(df_sig$N_Exp - (df_sig$Survival*df_sig$N_Exp),0)
mod<-read.csv('data_in/As_Modifier.csv')
#### Pyraclostrobin ----
#note to self; specific column numbers will change depending on dataset
effects<-read.csv('data_in/Headline_updated.csv')
param<-read.csv('data_in/parameters.csv') #go back and take weighted mean; sum alive / sum assessed
nsims<-1000
#first modify so that the survival is adjusted for 96 hours across all studies
effects$half_life<-(effects$Duration_h*log(2))/log(1/effects$Survival) #need to modify survival by duration, using an exponential growth curve
effects$adj_sur_96<-round(1/(2^(96/effects$half_life)),3)
print(names(effects))
df_sig<-effects[,c(1,5,8,10,17)] #make sure this output matches
df_sig<-na.omit(df_sig)
df_sig$mort<-round(df_sig$N_Exp - (df_sig$Survival*df_sig$N_Exp),0)
View(df_sig)
#first modify so that the survival is adjusted for 96 hours across all studies
effects$half_life<-(effects$Duration_h*log(2))/log(1/effects$Survival) #need to modify survival by duration, using an exponential growth curve
effects$adj_sur_96<-round(1/(2^(96/effects$half_life)),3)
print(names(effects))
df_sig<-effects[,c(1,5,8,11,18)] #make sure this output matches
df_sig<-na.omit(df_sig)
df_sig$mort<-round(df_sig$N_Exp - (df_sig$Survival*df_sig$N_Exp),0)
df_sig$alive<-df_sig$N_Exp-df_sig$mort
head(df_sig)
#split data into list by study/species for cochran armitage trend test
by_s_stat<-split(df_sig, list(df_sig$Study, df_sig$Species), drop=T)
by_s_stat<-lapply(by_s_stat, function (x) x[c('Application_Rate','mort','alive')])
by_s_stat
#### Pyraclostrobin ----
#note to self; specific column numbers will change depending on dataset
effects<-read.csv('data_in/Headline_updated.csv')
param<-read.csv('data_in/parameters.csv') #go back and take weighted mean; sum alive / sum assessed
nsims<-1000
#first modify so that the survival is adjusted for 96 hours across all studies
effects$half_life<-(effects$Duration_h*log(2))/log(1/effects$Survival) #need to modify survival by duration, using an exponential growth curve
effects$adj_sur_96<-round(1/(2^(96/effects$half_life)),3)
print(names(effects))
df_sig<-effects[,c(1,5,9,11,18)] #make sure this output matches
#### Pyraclostrobin ----
#note to self; specific column numbers will change depending on dataset
effects<-read.csv('data_in/Headline_updated.csv')
param<-read.csv('data_in/parameters.csv') #go back and take weighted mean; sum alive / sum assessed
nsims<-1000
#first modify so that the survival is adjusted for 96 hours across all studies
effects$half_life<-(effects$Duration_h*log(2))/log(1/effects$Survival) #need to modify survival by duration, using an exponential growth curve
effects$adj_sur_96<-round(1/(2^(96/effects$half_life)),3)
print(names(effects))
df_sig<-effects[,c(1,5,9,11,18)] #make sure this output matches
df_sig<-na.omit(df_sig)
df_sig$mort<-round(df_sig$N_Exp - (df_sig$Survival*df_sig$N_Exp),0)
df_sig$alive<-df_sig$N_Exp-df_sig$mort
head(df_sig)
#split data into list by study/species for cochran armitage trend test
by_s_stat<-split(df_sig, list(df_sig$Study, df_sig$Species), drop=T)
by_s_stat<-lapply(by_s_stat, function (x) x[c('Application_Rate','mort','alive')])
#change format to matrix to run CA trend test to test for trends in increasing significance
ch0=list()
for (i in seq_along(by_s_stat)) {
a=t(by_s_stat[[i]])
colnames(a)<-a[1,]
a<-a[c(3,2),] #need to have no mort first row, mort second
row.names(a)<-c(0,1)
a<-as.matrix(a)
ch0[[i]]<-a
}
#run CA test over matrix list; format needs to match format in ?Cochran-Armitage 'dose' ex
CA_increasing_trend<-lapply(ch0,function(x) CochranArmitageTest(x,'increasing'))
CA_increasing_trend
effects_sub<-effects[(effects$Study =='Cusaac_2015' & effects$Species == 'Acris blanchardi'),]
effects<-effects[!(effects$Study == 'Cusaac_2017a' | effects$Study == 'Cusaac_2015'), ]
effects<-rbind(effects,effects_sub)
effects<-effects[order(effects$Study),]
#group by study, species, and application rate
effects<-effects %>%
group_by(Study) %>% #study
group_by(Species) %>% #species
group_by(Application_Rate)%>% #application rate
mutate(SE = SD/sqrt(length(effects))) #mutate to add standard error to account for variability between studies
effects<-as.data.frame(effects)
#effects<-na.omit(effects)
controls<-effects[effects$Application_Rate == 0, ]  #take out all controls
control<-effects[1,] # take out single row which will contain final control
#function for weighted mean
weight_mean<-function(data,vector,weight){
round(with(data, sum(vector*weight)/sum(weight)),2)
}
control$Survival<-weight_mean(controls,controls$Survival, controls$N_Exp) #survival
control$N_Exp<-sum(controls$N_Exp)#use sum of the N used in dose for final N_exp
effects<-effects[!effects$Application_Rate == 0, ] #remove application rate of 0
effects<-rbind(effects,control)
min(effects$M_Body_Weight_g)
min(effects$SD)
effects <-effects[order(effects$Study),]
View(effects)
###Body weights
#Simulate body weights (BWs)- we need 1000 simulations of the X different BWs
by_s<-split(effects, list(effects$Study,effects$Species,effects$Application_Rate), drop=T) #split by study, species, application rate use SE
by_s<-by_s[order(names(by_s))]
print(names(by_s[[1]]))
bw_sim<-replicate(nsims,
{normalize <- lapply(by_s, function(y) rnorm(nrow(y), mean=y[[12]], sd=y[[13]]))
bw_sim<-as.data.frame(unlist(normalize))
})
bw_sim<-do.call(cbind.data.frame, bw_sim)
colnames(bw_sim)[1:nsims]<-names<-paste0("BW",1:nsims,"")
View(bw_sim)
###survival
#simulate survival using a binomial distribution with modified duration
survival_sim <- matrix(data=NA,nrow=nrow(effects),ncol=nsims)
colnames(survival_sim)[1:nsims]<-paste0("Sur",1:nsims,"")
names(effects)
for(i in 1:nrow(effects)){
survival_sim[i,]<-rbinom(nsims, effects[i,17], effects[i,20]) #trials is number of observations for each experiment, prob is adjusted prob of survival for 96 hours
survival_sim[i,]<-round(survival_sim[i,]/effects[i,17],3) #divide the number surviving by total trials to find the proportion that actually survived
}
survival_sim<-as.data.frame(survival_sim)
###exposure parameters
#simulate the exposure parameters from Purucker et al. 2021
exposure_sims <- matrix(data=NA,nrow=nsims,ncol=6)
colnames(exposure_sims) <- c("dt_mean","movement_rate_mean","bioavail_mean",
"dermal_sa_slope_mean","dermal_sa_exponent_mean",
"dermal_fraction_mean")
exposure_sims[,1]<-rnorm(nsims, mean=param[1,2], sd=param[2,2])
exposure_sims[,2]<-rpois(nsims, param[3,2])                     #recall this is a poisson distribution, so no SD
exposure_sims[,3]<-rnorm(nsims, mean=param[5,2], sd=param[6,2])
exposure_sims[,4]<-rnorm(nsims, mean=param[7,2], sd=param[8,2])
exposure_sims[,5]<-rnorm(nsims, mean=param[9,2], sd=param[10,2])
exposure_sims[,6]<-rnorm(nsims, mean=param[11,2], sd=param[12,2])
exposure_sims<-as.data.frame(exposure_sims)
###pyraclostrobin
#calculate dermal dosage
pmolweight<-387.8 #g/mol #comptox
plogKow<- 4.44 #comptox
kp_pyra =  10^(-2.72+(0.71*plogKow)-(0.0061*pmolweight))
hl<-4.91*24 #from comptox profile
#calculate soil concentrations; application rate will remain the same, the exponent value changes with exposure parameter simulations
soil_concs_degs<-as.data.frame(log(2)/hl*96/exposure_sims$movement_rate_mean) #use 96 as duration, as we adjusted all survivals for a 96h timeframe
soil_concs<-((effects$Application_Rate*10)/16000)*1000 #1cm depth #converts it into final units of ug/g (tissue conc/bw)#this comes from Weir
my_list<-list()
for (i in 1:nsims){
dsa<-exposure_sims[i,5]*bw_sim[,i]^exposure_sims[i,5]
dermal_dose<-(soil_concs^soil_concs_degs[i,] * kp_pyra * (dsa/exposure_sims[i,1]) * exposure_sims[i,6] * exposure_sims[i,3])/bw_sim[,i]
my_list[[i]]<-dermal_dose
}
my_list[9] #check the list outputs to be sure
derm<-as.data.frame(t(do.call(rbind.data.frame, my_list)))
colnames(derm)<-paste0("dermdose",1:nsims,"")
row.names(derm)<-NULL
View(derm)
fam<-as.data.frame(cbind(effects$Family, effects$Study))
names(fam)<-c('Family', 'Study')
mod_As<- merge(fam,mod, by  = "Family")
mod_As<-mod_As[order(mod_As$Study),]
bw_sim_as<-bw_sim
exp<-bw_sim_as^mod_As$Exponent
as<-mod_As$As_Modifyer*exp
colnames(as)[1:nsims]<-names<-paste0("As",1:nsims,"")
#100% of surface area
derm_adj_r<-derm*as
View(derm_adj_r)
#Check ratio:
ratio_100<-derm_adj_r/derm
View(ratio_100)
BCF_100_m<-colMeans(ratio_100[1:22,], na.rm=T)
print(mean(BCF_100_m))
ratio_100[1:22,]
View(ratio_100)
#100% of surface area
derm_adj_r<-derm*as
#Check ratio:
ratio_100<-derm_adj_r/derm
BCF_100_m<-colMeans(ratio_100[1:23,], na.rm=T)
print(mean(BCF_100_m))
View(ratio_100)
#50% of surface area
derm_adj_r<-derm*(as/2)
#Check ratio:
ratio_50<-derm_adj_r/derm
BCF_50_m<-colMeans(ratio_50[1:23,], na.rm=T)
print(mean(BCF_50_m))
ratio_66$Study<-effects$Study
#Check ratio:
ratio_100<-derm_adj_r/derm
ratio_100$Family<-effects$Family #add family
BCF_100_m<- aggregate(ratio_100[c(1:1000),], list(ratio_100$Family), FUN=mean)
BCF_100_m<- ratio_100 %>%
group_by(Family) %>%
summarise(across(-Family, mean, na.rm = TRUE))
BCF_100_m<- ratio_100 %>%
group_by(Family) %>%
summarise(across(mean, na.rm = TRUE))
library(dplyr)
library(tidyr)
library(stats)
library(multcomp)
library(DescTools)
library(reshape2)
BCF_100_m<- ratio_100 %>%
group_by(Family) %>%
summarise(across(As1:As1000,mean, na.rm = TRUE))
View(ratio_100)
BCF_100_m<- ratio_100 %>%
group_by(Family) %>%
summarise(across(dermdose1:dermdose1000,mean, na.rm = TRUE))
View(BCF_100_m)
View(effects)
View(mod_As)
View(mod)
print(mean(BCF_100_m[1:1000,]))
print(rowMeans(BCF_100_m[2:1001]))
print(BCF_100_m[,1],rowMeans(BCF_100_m[2:1001]))
print(rowMeans(BCF_100_m[2:1001]))
##50% of surface area
derm_adj_r<-derm*(as/2)
#Check ratio:
ratio_50<-derm_adj_r/derm
ratio_50$Family<-effects$Family #add family
BCF_50_m<- ratio_50 %>%
group_by(Family) %>%
summarise(across(dermdose1:dermdose1000, mean, na.rm = TRUE))
print(rowMeans(BCF_50_m[2:1001]))
##100% of surface area
derm_adj_r<-derm*as
#Check ratio:
ratio_100<-derm_adj_r/derm
ratio_100$Family<-effects$Family #add family
BCF_100_m<- ratio_100 %>%
group_by(Family) %>%
summarise(across(dermdose1:dermdose1000,mean, na.rm = TRUE))
print(rowMeans(BCF_100_m[2:1001]))
##50% of surface area
derm_adj_r<-derm*(as/2)
#Check ratio:
ratio_50<-derm_adj_r/derm
ratio_50$Family<-effects$Family #add family
BCF_50_m<- ratio_50 %>%
group_by(Family) %>%
summarise(across(dermdose1:dermdose1000, mean, na.rm = TRUE))
print(rowMeans(BCF_50_m[2:1001]))
##2/3 of surface area
derm_adj_r<-derm*(as*0.666)
#Check ratio:
ratio_66<-derm_adj_r/derm
ratio_66$Family<-effects$Family #add family
BCF_66_m<- ratio_66 %>%
group_by(Family) %>%
summarise(across(dermdose1:dermdose1000, mean, na.rm = TRUE))
print(rowMeans(BCF_66_m[2:1001]))
